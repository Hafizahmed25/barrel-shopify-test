#! /bin/bash

ROOT_DIR="$(pwd)"

echo "Processing opts.."
while getopts ":e:" opt; do
  case $opt in
    e) ENV="${OPTARG}" ;;
  esac
done

echo "Checking environment.."
envs=(
  development
  staging
  production
)

ENV_FOUND=false
for i in "${!envs[@]}"; do
  if [[ "${envs[$i]}" = "${ENV}" ]]; then
    ENV_FOUND=true
    case "${envs[$i]}" in
      development) THEME_NAME="Dev" ;;
      staging) THEME_NAME="Stage" ;;
      production) THEME_NAME="Live" ;;
    esac
  fi
done

if [ $ENV_FOUND = false ]; then
  echo "Environment ${ENV} not accepted"
  exit 1;
fi

echo "Checking to see if NPM is available.."
if [ ! -x "$(command -v npm)" ]; then
  echo "npm must be available"
  exit 1;
fi

npm set progress=false

echo "Installing node modules.."
if [ ! -d "node_modules" ]; then
  npm i --quiet
fi

echo "Temporarily setting the path.."
BIN_PATH="$(pwd)/node_modules/.bin"
export PATH="$PATH:$BIN_PATH"

echo "Installing Shopify theme kit.."
if [ ! -x "$(command -v theme-no-c)" ]; then
  npm install @shopify/themekit --quiet
  cp \
  ./node_modules/@shopify/themekit/bin/theme \
  ./node_modules/.bin/theme-no-c
fi

if [ ! -x "$(command -v theme-no-c)" ]; then
  echo "Shopify theme kit not available"
  exit 1
else
  echo "$(theme-no-c version)"

fi

dir=dist
echo "Remove dist directory"
rm -rf "${dir}"

echo "Creating directories.."
sub_dirs=(
  assets
  config
  layout
  locales
  snippets
  sections
)

if [ ! -d "${dir}" ]; then
  mkdir dist && cd "$_";

  for sub in ${sub_dirs[@]}; do
    [ -d "${sub}" ] && mkdir "${sub}"
  done
fi

echo "Building assets.."
cd ${ROOT_DIR} && npm run build

echo "Checking environmental variables.."
if [ -z "$SHOPIFY_PASSWORD" ]; then
  echo "Reading Yaml file.."

  source ./ci/parse-yaml
  CONFIG="$(pwd)/dist/config.yml"
  PARSED="$(parse_yaml "${CONFIG}")"
  eval "${PARSED}"

  eval SHOPIFY_PASSWORD="\$${ENV}_password"
  eval STORE="\$${ENV}_store"
  eval THEME_ID="\$${ENV}_theme_id"
  eval SHOPIFY_API_KEY="\$${ENV}_api_key"
fi

echo "Configuring Shopify yaml file.."
if [ ! -f "${ROOT_DIR}/dist/config.yml" ]; then
  cd "${ROOT_DIR}/dist" && \
    theme-no-c configure \
    --env="${ENV}" \
    --password="${SHOPIFY_PASSWORD}" \
    --store="${STORE}" \
    --themeid="${THEME_ID}"
fi

echo "Uploading theme assets [store ${STORE}].."
cd "${ROOT_DIR}/dist" && theme-no-c upload --env="${ENV}"

echo "Saving commit message as theme name.."
if [ ! -f "commit.txt" ]; then
  cd "${ROOT_DIR}"

  if [ -x "$(command -v git)" ]; then
    git log --oneline -1 > commit.txt
  else
    exit 0
  fi

  if [ ! -d "${ROOT_DIR}/node_modules/moment-timezone" ]; then
    npm install moment-timezone --quiet
  fi

  if [ ! -d "${ROOT_DIR}/node_modules/shopify-node-api" ]; then
    npm install shopify-node-api --quiet
  fi

  STORE="${STORE}" \
    SHOPIFY_API_KEY="${SHOPIFY_API_KEY}" \
    SHOPIFY_PASSWORD="${SHOPIFY_PASSWORD}" \
    THEME_ID="${THEME_ID}" \
    THEME_NAME="${THEME_NAME}" \
    node ./ci/update-name
  rm commit.txt
fi
